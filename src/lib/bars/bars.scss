
$firstBarColor: green;
$lastBarColor: blue;
$barColorCount: 8;
$barStrokeLightnessScale: -33%;
$hoveredBarFillLighnessScale: 10%;

$barColors: chromatic-scale(
  $firstBarColor,
  $lastBarColor,
  (
    mode: 'hcl',
    stops: $barColorCount,
  )
);

.bars {
  // grid-column: drawingAreaStart / drawingAreaEnd;
  // grid-row: drawingAreaStart / drawingAreaEnd;
}

.bar rect {
  $barColor: map-get(
    $map: $barColors,
    $key: 0,
  );
  fill: $barColor;
  stroke: scale-color($color: $barColor, $lightness: $barStrokeLightnessScale);
}

.bar:hover rect {
  $barColor: map-get(
    $map: $barColors,
    $key: 0,
  );
  fill: scale-color($color: $barColor, $lightness: $hoveredBarFillLighnessScale);
  stroke: scale-color(
    $color: $barColor,
    $lightness: $hoveredBarFillLighnessScale + $barStrokeLightnessScale
  );
}

.transition .bar .label {
  transition: transform 1s;
}

.bar .label text {
  text-anchor: middle;
  transform: translate(0, 0.35em);
}

.bar:hover .label text {
  font-weight: bold;
}

@each $index, $color in $barColors {
  .bar-group .bar:nth-child(#{$barColorCount}n + #{$index + 1}) rect {
    fill: $color;
    stroke: scale-color($color: $color, $lightness: $barStrokeLightnessScale);
  }
  .bar-group .bar:nth-child(#{$barColorCount}n + #{$index + 1}):hover rect {
    fill: scale-color($color: $color, $lightness: $hoveredBarFillLighnessScale);
    stroke: scale-color(
      $color: $color,
      $lightness: $hoveredBarFillLighnessScale + $barStrokeLightnessScale
    );
  }
}
