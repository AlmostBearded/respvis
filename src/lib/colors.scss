@use 'sass:list';

$firstColor: #440154;
$lastColor: #fee825;
$strokeLightnessScale: -60%;
$hoverFillLighnessScale: 25%;

// categorical color scales
$pastel1: #fbb4ae #b3cde3 #ccebc5 #decbe4 #fed9a6 #ffffcc #e5d8bd #fddaec #f2f2f2;
$set3: #8dd3c7 #ffffb3 #bebada #fb8072 #80b1d3 #fdb462 #b3de69 #fccde5 #d9d9d9 #bc80bd #ccebc5 #ffed6f;
$dark2: #1b9e77 #d95f02 #7570b3 #e7298a #66a61e #e6ab02 #a6761d #666666;

// categorical color scales generated with colorgorical
$colorgorical1: #78b4c6 #1c9820 #ff0087 #9bb64b #628df2 #0db293 #f14330 #b8949e #e49c4f #a665e4; 

// sequential color scales
$viridis: #440154 #482777 #3f4a8a #31678e #26838f #1f9d8a #6cce5a #b6de2b #fee825;

$colors: $colorgorical1;

// $colors3: chromatic-scale(
//   $firstColor,
//   $lastColor,
//   (
//     mode: 'hcl',
//     stops: 3,
//   )
// );

// $colors5: chromatic-scale(
//   $firstColor,
//   $lastColor,
//   (
//     mode: 'hcl',
//     stops: 5,
//   )
// );

// $colors8: chromatic-scale(
//   $firstColor,
//   $lastColor,
//   (
//     mode: 'hcl',
//     stops: 8,
//   )
// );

.bar rect {
  fill: nth($colors, 1);
  stroke: scale-color($color: nth($colors, 1), $lightness: $strokeLightnessScale);
  stroke-width: 2px;
}

.bar:hover rect {
  fill: scale-color($color: nth($colors, 1), $lightness: $hoverFillLighnessScale);
  stroke: scale-color(
    $color: nth($colors, 1),
    $lightness: $hoverFillLighnessScale + $strokeLightnessScale
  );
}


@for $i from 1 through length($colors) {
  $c: nth($colors, $i);
  // Color bars & legend swatches
  .bar-group .bar:nth-child(#{length($colors)}n + #{$i}) rect,
  .bar-group .bar:nth-child(#{length($colors)}n + #{$i}) rect,
  .legend > g:nth-child(#{length($colors)}n + #{$i}) rect,
  .legend > g:nth-child(#{length($colors)}n + #{$i}) rect {
    fill: $c;
    stroke: scale-color($color: $c, $lightness: $strokeLightnessScale);
  }

  // Color hovered bars
  .bar-group .bar:nth-child(#{length($colors)}n + #{$i}):hover rect,
  .bar-group .bar:nth-child(#{length($colors)}n + #{$i}):hover rect {
    fill: scale-color($color: $c, $lightness: $hoverFillLighnessScale);
    stroke: scale-color(
      $color: $c,
      $lightness: $hoverFillLighnessScale + $strokeLightnessScale
    );
  }
}


// @each $index, $color in $colors3 {
//   // Color bars & legend swatches
//   .bar-group .bar:nth-child(3n + #{$index + 1}):nth-last-child(#{3 - $index}) rect,
//   .bar-group .bar:nth-child(3n + #{$index + 1}):nth-last-child(#{2 - $index}) rect,
//   .legend g:nth-child(3n + #{$index + 1}):nth-last-child(#{3 - $index}) rect,
//   .legend g:nth-child(3n + #{$index + 1}):nth-last-child(#{2 - $index}) rect {
//     fill: $color;
//     stroke: scale-color($color: $color, $lightness: $strokeLightnessScale);
//   }

//   // Color hovered bars
//   .bar-group .bar:nth-child(3n + #{$index + 1}):nth-last-child(#{3 - $index}):hover rect,
//   .bar-group .bar:nth-child(3n + #{$index + 1}):nth-last-child(#{2 - $index}):hover rect {
//     fill: scale-color($color: $color, $lightness: $hoverFillLighnessScale);
//     stroke: scale-color(
//       $color: $color,
//       $lightness: $hoverFillLighnessScale + $strokeLightnessScale
//     );
//   }
// }

// @each $index, $color in $colors5 {
//   // Color bars & legend swatches
//   .bar-group .bar:nth-child(5n + #{$index + 1}):nth-last-child(#{4 - $index}) rect,
//   .bar-group .bar:nth-child(5n + #{$index + 1}):nth-last-child(#{5 - $index}) rect,
//   .legend g:nth-child(5n + #{$index + 1}):nth-last-child(#{4 - $index}) rect,
//   .legend g:nth-child(5n + #{$index + 1}):nth-last-child(#{5 - $index}) rect {
//     fill: $color;
//     stroke: scale-color($color: $color, $lightness: $strokeLightnessScale);
//   }

//   // Color hovered bars
//   .bar-group .bar:nth-child(5n + #{$index + 1}):nth-last-child(#{4 - $index}):hover rect,
//   .bar-group .bar:nth-child(5n + #{$index + 1}):nth-last-child(#{5 - $index}):hover rect {
//     fill: scale-color($color: $color, $lightness: $hoverFillLighnessScale);
//     stroke: scale-color(
//       $color: $color,
//       $lightness: $hoverFillLighnessScale + $strokeLightnessScale
//     );
//   }
// }

// @each $index, $color in $colors8 {
//   // Color bars & legend swatches
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{6 - $index}) rect,
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{7 - $index}) rect,
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{8 - $index}) rect,
//   .legend g:nth-child(8n + #{$index + 1}):nth-last-child(#{6 - $index}) rect,
//   .legend g:nth-child(8n + #{$index + 1}):nth-last-child(#{7 - $index}) rect,
//   .legend g:nth-child(8n + #{$index + 1}):nth-last-child(#{8 - $index}) rect {
//     fill: $color;
//     stroke: scale-color($color: $color, $lightness: $strokeLightnessScale);
//   }

//   // Color hovered bars
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{6 - $index}):hover rect,
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{7 - $index}):hover rect,
//   .bar-group .bar:nth-child(8n + #{$index + 1}):nth-last-child(#{8 - $index}):hover rect {
//     fill: scale-color($color: $color, $lightness: $hoverFillLighnessScale);
//     stroke: scale-color(
//       $color: $color,
//       $lightness: $hoverFillLighnessScale + $strokeLightnessScale
//     );
//   }
// }
